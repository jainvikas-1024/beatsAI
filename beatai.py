# -*- coding: utf-8 -*-
"""beatai.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bczKwvgMAgeEnHeRERnoM51-o7QrxeH-
"""

# here we are importing all important and necessary library
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error

# converting csv to pandas dataframe
data = pd.read_csv("train_data.csv")
pd.read_csv('train_data.csv').head()

# axis to 0
len(data.axes[0])
len(data.axes[1])
# some information and description of dataset to train the model
data.info()
data.hist()
data.describe()
# droping columns like uuid and datasetId which is not of much use in training the model
data = data.drop(columns=['uuid', 'datasetId'])

print(data.columns)

data = data.dropna()


data = pd.get_dummies(data, columns=['condition'])

# Split the dataset into features (X) and target variable (y)
X = data.drop(columns=['HR'])
y = data['HR']

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Feature Scaling
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Random Forest Regressor
rf_model = RandomForestRegressor(n_estimators=100, random_state=42)

# Train the model
rf_model.fit(X_train, y_train)

# Model Evaluation
y_pred = rf_model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)

print(f'Mean Squared Error on Test Set: {mse}')
from sklearn.metrics import r2_score

# Assuming y_pred and y_test are the predicted and true values, respectively
r_squared = r2_score(y_test, y_pred)

print(f'R-squared on Test Set: {r_squared:.2%}')

# Save the model for future use
import joblib
joblib.dump(rf_model, 'heart_rate_prediction_rf_model.joblib')